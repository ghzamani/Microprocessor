;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;#include <stdbool.h>
;#include <stdio.h>
;
;unsigned char int_to_char(int x) {
; 0000 0007 unsigned char int_to_char(int x) {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0008     return x + '0';
;PCODE: $0000000F VOL: 0
;	x -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0009 }
;PCODE: $00000014 VOL: 0
;
;void put_on_lcd(int value, int c) {
; 0000 000B void put_on_lcd(int value, int c) {
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 000C     unsigned int r = 1;
; 0000 000D     unsigned char tens = int_to_char(value / 10);
; 0000 000E     unsigned char ones = int_to_char(value % 10);
; 0000 000F     lcd_gotoxy(c, r);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;	value -> Y+6
;	c -> Y+4
;	r -> R16,R17
;	tens -> R19
;	ones -> R18
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0010     lcd_putchar(tens);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0011     lcd_gotoxy(c + 1, r);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0012     lcd_putchar(ones);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0013 }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;
;// Voltage Reference: AVCC pin
;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input) {
; 0000 0019 unsigned int read_adc(unsigned char adc_input) {
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 001A     ADMUX = adc_input | ADC_VREF_TYPE;
;PCODE: $0000003A VOL: 0
;	adc_input -> Y+0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 001B     // Delay needed for the stabilization of the ADC input voltage
; 0000 001C     delay_us(10);
;PCODE: $0000003E VOL: 0
; 0000 001D     // Start the AD conversion
; 0000 001E     ADCSRA |= (1 << ADSC);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 001F     // Wait for the AD conversion to complete
; 0000 0020     while ((ADCSRA & (1 << ADIF)) == 0);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0021     ADCSRA |= (1 << ADIF);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0022     return ADCW;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0023 }
;PCODE: $0000004C VOL: 0
;
;void cooler_rotational_speed(int st){
; 0000 0025 void cooler_rotational_speed(int st){
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0026     int delay;
; 0000 0027     switch(st){
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;	st -> Y+2
;	delay -> R16,R17
;PCODE: $00000052 VOL: 0
; 0000 0028         case 1:
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0029             delay = 600;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 002A             break;
;PCODE: $00000057 VOL: 0
; 0000 002B         case 2:
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 002C             delay = 400;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 002D             break;
;PCODE: $0000005D VOL: 0
; 0000 002E         case 3:
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 002F             delay = 200;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0030             break;
;PCODE: $00000063 VOL: 0
; 0000 0031     }
;PCODE: $00000064 VOL: 0
; 0000 0032 
; 0000 0033     DDRD = 0x0F;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0034     PORTD = 0x09;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0035     delay_ms(delay);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0036     PORTD = 0x08;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0037     delay_ms(delay);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0038     PORTD = 0x0C;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0039     delay_ms(delay);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 003A     PORTD = 0x04;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 003B     delay_ms(delay);
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 003C     PORTD = 0x06;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 003D     delay_ms(delay);
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 003E     PORTD = 0x02;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 003F     delay_ms(delay);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0040     PORTD = 0x03;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0041     delay_ms(delay);
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0042     PORTD = 0x01;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0043     delay_ms(delay);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0044 }
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;
;
;void main(void) {
; 0000 0047 void main(void) {
;PCODE: $0000008E VOL: 0
; 0000 0048     int temperature;
; 0000 0049     unsigned int state = 1;
; 0000 004A     bool cooler = false;
; 0000 004B     bool heater = false;
; 0000 004C 
; 0000 004D     int cooler_state = 0;
; 0000 004E 
; 0000 004F     int period = 200;
; 0000 0050     // ADC initialization
; 0000 0051     // ADC Clock frequency: 250.000 kHz
; 0000 0052     // ADC Voltage Reference: AVCC pin
; 0000 0053     // ADC Auto Trigger Source: ADC Stopped
; 0000 0054     ADMUX |= (1<<MUX0);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;	temperature -> R16,R17
;	state -> R18,R19
;	cooler -> R21
;	heater -> R20
;	cooler_state -> Y+2
;	period -> Y+0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0055     //ADMUX=ADC_VREF_TYPE;
; 0000 0056     ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (0<<ADPS1) | (1<<ADPS0);
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0057     SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0058 
; 0000 0059     lcd_init(16);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 005A 
; 0000 005B     lcd_gotoxy(3, 0);
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 005C     //lcd_puts("LM35 Sensor");
; 0000 005D 
; 0000 005E     lcd_gotoxy(2, 1);
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 005F     lcd_puts("Temp :");
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0060 
; 0000 0061     lcd_gotoxy(12, 1);
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 0062     lcd_putchar(223);
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 0063 
; 0000 0064     lcd_gotoxy(13, 1);
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0065     lcd_puts("C");
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0066 
; 0000 0067     delay_ms(1000);
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 0068     while (1) {
;PCODE: $000000C0 VOL: 0
; 0000 0069         temperature = read_adc(0);
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 006A         temperature = temperature * 0.48898;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 006B         put_on_lcd(temperature, 9);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 006C 
; 0000 006D         // check the temperature to find the state
; 0000 006E         if(state == 1){
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 006F 
; 0000 0070             lcd_gotoxy(3, 0);
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0071             lcd_puts("state: 1");
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 0072             if(temperature > 35){
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 0073                 state = 2;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 0074                 heater = false;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0075                 cooler = true;
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0076             }
; 0000 0077             else if(temperature < 15){
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 0078                 state = 3;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 0079                 heater = true;
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 007A                 cooler = false;
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 007B             }
; 0000 007C             else{
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 007D                 //stays in state 1
; 0000 007E                 heater = false;
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 007F                 cooler = false;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 0080             }
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 0081         }
; 0000 0082         else if(state == 2){
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 0083 
; 0000 0084             lcd_gotoxy(3, 0);
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 0085             lcd_puts("state: 2");
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 0086             if(temperature < 25){
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 0087                 state = 1;
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 0088                 heater = false;
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 0089                 cooler = false;
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 008A             }
; 0000 008B             else{
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 008C                 //stays in state 2
; 0000 008D                 heater = false;
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 008E                 cooler = true;
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 008F             }
;PCODE: $0000010F VOL: 0
; 0000 0090         }
; 0000 0091         else{
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 0092 
; 0000 0093             lcd_gotoxy(3, 0);
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 0094             lcd_puts("state: 3");
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 0095             //state is 3
; 0000 0096             if(temperature > 30){
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 0097                 state = 1;
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 0098                 heater = false;
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 0099                 cooler = false;
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 009A             }
; 0000 009B             else{
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 009C                 //stays in state 3
; 0000 009D                 heater = true;
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 009E                 cooler = false;
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 009F             }
;PCODE: $00000128 VOL: 0
; 0000 00A0         }
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 00A1 
; 0000 00A2         DDRD = 0x00;
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00A3         if(cooler){
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00A4             // EXTRA POINT PART
; 0000 00A5             switch(cooler_state){
;PCODE: $0000012F VOL: 0
; 0000 00A6                 case(0):
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 00A7                     if(temperature > 35)
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00A8                         cooler_state = 1;
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 00A9                     break;
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 00AA                 case(1):
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 00AB                     if(temperature < 25)
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 00AC                         cooler_state = 0;
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 00AD                     if(temperature > 40)
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 00AE                         cooler_state = 2;
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 00AF                     break;
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 00B0                 case(2):
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 00B1                     if(temperature < 35)
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 00B2                         cooler_state = 1;
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 00B3                     if(temperature > 45)
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 00B4                         cooler_state = 3;
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 00B5                     break;
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 00B6                 case(3):
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 00B7                     if(temperature < 40)
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 00B8                         cooler_state = 2;
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 00B9                     break;
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 00BA             }
;PCODE: $00000163 VOL: 0
; 0000 00BB 
; 0000 00BC             cooler_rotational_speed(cooler_state);
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 00BD         }
; 0000 00BE 
; 0000 00BF         if(heater){
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 00C0             DDRD = 0xF0;
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 00C1             PORTD = 0x90;
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 00C2             delay_ms(period);
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 00C3             PORTD = 0xC0;
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 00C4             delay_ms(period);
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 00C5             PORTD = 0x60;
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 00C6             delay_ms(period);
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 00C7             PORTD = 0x30;
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 00C8             delay_ms(period);
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 00C9         }
; 0000 00CA     }
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00CB }
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0

	.DSEG
_0xC:
	.BYTE 0x24
